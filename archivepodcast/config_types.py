from typing import Any, Optional

from pydantic import BaseModel, HttpUrl


class S3Config(BaseModel):
    cdn_domain: str = "https://public_url_of_s3_bucket/"
    api_url: str = ""
    bucket: str = ""
    access_key_id: str = ""
    secret_access_key: str = ""


class WebPageConfig(BaseModel):
    title: str = "Podcast Archive"
    description: str = "Podcast archive, generated by archivepodcast, available at https://github.com/kism/archivepodcast"
    contact: str = "archivepodcast@localhost"


class AppConfig(BaseModel):
    web_page: WebPageConfig = WebPageConfig()
    inet_path: str = "http://localhost:5100/"
    storage_backend: str = "local"
    s3: S3Config = S3Config()


class PodcastConfig(BaseModel):
    url: str = ""
    new_name: str = ""
    name_one_word: str = ""
    description: str = ""
    live: bool = True
    contact_email: str = ""


class LoggingConfig(BaseModel):
    level: str = "INFO"
    path: str = ""


class FlaskConfig(BaseModel):
    TESTING: bool = False
    # Allow any additional Flask configuration options
    extra_settings: dict[str, Any] = {}


class RootConfig(BaseModel):
    app: AppConfig = AppConfig()
    podcast: list[PodcastConfig] = [PodcastConfig()]
    logging: LoggingConfig = LoggingConfig()
    flask: FlaskConfig = FlaskConfig()

