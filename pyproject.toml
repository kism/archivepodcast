#:schema None
##:schema https://json.schemastore.org/pyproject.json

[project]
name = "archivepodcast"
version = "1.4.20"
description = "Flask webapp that will archive a podcast from a RSS feed. It will download the episodes and re-host them."
authors = [{ name = "Kieran Gee", email = "kieran.lost.the.game@gmail.com" }]
readme = "README.md"
requires-python = ">=3.12,<3.14"
dependencies = [
    "boto3>=1.36,<2",
    "colorama>=0.4.6",
    "flask>=3.1,<4",
    "jinja2>=3.1,<4",
    # dnf install libxml2-devel libxslt-devel
    # apt install libxml2-dev libxslt-dev
    "lxml>=5,<5.4", # Right now its broken for linux on a greater version
    # "lxml>=6", # TESTING
    "markdown>=3.7",
    "psutil>=6.1.1",
    "python-magic>=0.4",
    "requests>=2.32",
    "tomlkit>=0.13",
    "typed-ffmpeg>=3.0",
    "waitress>=3.0",
]

[dependency-groups]

type = [
    "mypy",
    "ty",
    "types-colorama",
    "types-lxml",
    "types-requests",
    "types-psutil",
    "types-Markdown",
    "boto3-stubs[s3]",
]

lint = ["ruff"]

test = [
    "pytest",
    "pytest-cov",
    "pytest-mock",
    "pytest-random-order",
    "detect-test-pollution",
    "moto[s3]",
    "requests-mock",
    "pytest-socket>=0.7.0",
]

docs = ["sphinx", "myst-parser", "sphinx-rtd-theme"]

[tool.uv]
default-groups = ["test", "type", "lint", "docs"]

[tool.ruff]
cache-dir = "~/.cache/ruff"
target-version = "py312"
line-length = 120

[tool.ruff.lint]
select = ["ALL"] # KG Include absolutely all of Ruff's rules.
ignore = [
    # Modules
    "DJ", # KG Django not required

    # Specific rules
    "TD002",  # KG Verbose TODO, only I work on this project
    "TD003",  # KG Verbose TODO, only I work on this project
    "ISC001", # KG conflict in the formatter
    "COM812", # KG conflict in the formatter
]

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = [
    # Modules
    "ARG", # KG Unused function args -> fixtures nevertheless are functionally relevant
    "FBT", # KG Don't care about booleans as positional arguments in tests, e.g. via @pytest.mark.parametrize()
    "D",   # KG Don't care about docstrings in tests
    "ANN", # KG Don't care about annotations in tests

    # Specific rules
    "S101",    # KG asserts allowed in tests.
    "SLF001",  # KG Accessing private members is needed for testing.
    "PT004",   # KG monkeypatch doesn't return.
    "S311",    # KG I'll assume no real crypto will be done in PyTest.
    "S105",    # KG Hardcoded fake passwords are fine in tests.
    "PLR0913", # KG Tests can have as many arguments as they want.
    "BLE001",  # KG Tests can use BaseException.
]

"docs/*.py" = [
    # Modules
    "INP",
    "D",
    "A",
]


[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
docstring-code-format = true
docstring-code-line-length = 40

[tool.pytest.ini_options]
addopts = [
    "--cov-context=test",
    "--cov=archivepodcast",
    "--cov-report=term",
    "--cov-report=html",
    "--disable-socket",
    "--allow-hosts=127.0.0.1,127.0.1.1",
]
testpaths = ["tests"]
filterwarnings = [
    "ignore::DeprecationWarning:boto.*",
    "ignore::pytest.PytestUnhandledThreadExceptionWarning", # God knows
]


[tool.coverage.html]
show_contexts = true

[tool.mypy]
files = ["archivepodcast"]
namespace_packages = false     # God knows why this makes mypy take forever
explicit_package_bases = false # God knows why this makes mypy take forever
show_error_codes = true
strict = false


# [tool.mypy]
# files = ["archivepodcast"]
# namespace_packages = false # God knows why this makes mypy take forever
# explicit_package_bases = false # God knows why this makes mypy take forever
# show_error_codes = true
# strict = true
# enable_error_code = [
#     "ignore-without-code",
#     "redundant-expr",
#     "truthy-bool",
#     "type-arg",
#     "unused-awaitable",
#     "possibly-undefined",
#     "redundant-self",
# ]
# warn_unreachable = true
# warn_redundant_casts = true
