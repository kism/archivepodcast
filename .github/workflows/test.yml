---
name: Test (Pytest, Vitest)

on:
  push:
    branches:
      - main
      - test
    paths-ignore:
      - "**/README*"
      - "docs/**"

jobs:
  pytest:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4
      - uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: ffmpeg
          version: 1.0
      - name: Install ffmpeg, will be cached
        run: sudo apt-get install ffmpeg --no-install-recommends
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install the project
        run: uv sync --no-default-groups --group test
      - name: Test with pytest
        run: uv run pytest --cov-report=xml # xml report needed for codecov, other config from pyproject.toml
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  vitest:
    runs-on: ubuntu-latest
    timeout-minutes: 2
    strategy:
      matrix:
        node-version: ["22.x"]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: "**/package.json"
      - run: npm install vitest @vitest/coverage-v8
      - run: npm test

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
